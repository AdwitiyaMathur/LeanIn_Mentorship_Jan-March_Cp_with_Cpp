class Solution {
public:
    vector<int> deckRevealedIncreasing(vector<int>& deck) {
       
        vector<int> res(deck.size(), 0); 
        sort(deck.begin(), deck.end());
        
        queue<int> indexQueue;
        for(int i =0; i< res.size(); i++){
            indexQueue.push(i);
        }
        
        int cardIndex = 0; //this records the next card position in the sorted deck
		
        while(!indexQueue.empty()){
            int idx = indexQueue.front();
			
			//place answer in the result array
            res[idx] = deck[cardIndex]; 
            cardIndex++; //increment counter to similate revealed card
          
            indexQueue.pop(); //remove the card
            
		    if(!indexQueue.empty()){
                indexQueue.push(indexQueue.front()); 
                indexQueue.pop();
                //if there is card moves to end of the queue
            }
        }
        return res;
    }
};


